@using MESystem.Service
@using MESystem.Data.Location
@inject SessionValues SessionValues
@inject IApiClientService _apiClientService

<!-- Topbar Start -->
<div class="container-fluid bg-dark text-light p-0 d-none d-md-block d-lg-block">
    <div class="row gx-0 p-0">
        <div class="col-lg-8 text-center text-lg-start mb-2 mb-lg-0">
            <div class="d-inline-flex align-items-center" style="height: 45px;">
                <small class="me-3 text-light"><i class="fa fa-map-marker-alt me-2"></i>Lot 240, Street 12, Amata Industrial Zone, Bien Hoa, Dong Nai</small>
                <small class="me-3 text-light"><i class="fa fa-phone-alt me-2"></i>+084 2513 891 170</small>
                <small class="text-light"><i class="fa fa-envelope-open me-2"></i>jason.nguyen@friwo.com</small>
            </div>
        </div>
        <div class="col-lg-4 justify-content-center mb-0 mb-lg-0 animated slideInRight">
            <div class="col-12 m-0 d-inline-flex flex-row align-content-center justify-content-around" style="height: 45px;">
               
                        <a class="btn btn-sm btn-outline-primary btn-sm-square rounded-circle me-2" href="profile"><i class="fas fa-solid fa-user"></i></a>
                        <div class="text-primary" aria-label="true"/>
                        <a class="btn btn-sm btn-outline-danger btn-sm-square rounded-circle me-2" href="#loginModal"><i class="fa-solid fa-arrow-right-from-bracket"></i></a>
                        <a class="btn btn-sm btn-outline-primary btn-sm-square rounded-circle me-2" data-bs-toggle="modal" data-bs-target="#searchModal"><i class="fa fa-search"></i></a>
                        <a class="btn btn-outline-primary btn-sm-square rounded-circle me-2"><i class="fa-solid fa-headset"></i></a>
                  
                        <a class="btn btn-sm btn-outline-primary btn-sm-square rounded-circle me-2" href="createaccount"><i class="fas fa-solid fa-user-plus"></i></a>
                        <a class="btn btn-sm btn-outline-primary btn-sm-square rounded-circle me-2" data-bs-toggle="modal" data-bs-target="#loginModal"><i class="fas fa-sign-in-alt"></i></a>
                  
            </div>
        </div>
    </div>
</div>
<div class="colorStripe"></div>
@code {
    [CascadingParameter] private string ClientIpAdress { get; set; }
    [Parameter] public bool ToggleOn { get; set; }
    [Parameter] public EventCallback<bool> ToggleOnChanged { get; set; }
    bool PopupVisible { get; set; } = false;
    IPAddress ipAddress = new IPAddress();
    UserGeoLocation location;
    string[] countryPicker = { "GERMANY", "VIETNAM" };
    public string HeaderName { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        //SetCountryValues("GERMANY"); //manualMode
        SetCountryValues("VIETNAM"); //manualMode
                                     //await GetLocation();
    }

    public async Task GetLocation()
    {
        string clientIp = "::1";
        if (ClientIpAdress is not null)
        {
            clientIp = ClientIpAdress;
            //string test = cultureInfo.Name; // CurrentCulture;
        }

        if (clientIp.Contains("10.1."))
        {
            SetCountryValues("GERMANY");
        }
        else if (clientIp.Contains("10.100.") || clientIp.Contains("10.110.") || clientIp.Contains("10.120."))
        {
            SetCountryValues("VIETNAM");
        }
        else if (clientIp.Contains("::1"))
        {
            SetCountryValues("VIETNAM");
        }
        else
        {
            //PopupVisible = true;
            ipAddress = await _apiClientService.GetUserIPAsync();
            location = await _apiClientService.GetLocationAsync(ipAddress.IP);
            if (location.country_name != null) SetCountryValues(location.country_name.ToUpper());
        }
    }

    public async void SetCountryValues(string country)
    {
        switch (country)
        {
            case "GERMANY":
                SessionValues.ContractIFS = "1";
                SessionValues.Country = country;
                break;
            case "VIETNAM":
                SessionValues.ContractIFS = "7";
                SessionValues.Country = country;
                break;
            default:
                SessionValues.ContractIFS = "7";
                SessionValues.Country = country;
                break;
        }
        SessionValues.CountryIcon = "../images/icons/" + country.ToLower() + ".svg";
        PopupVisible = false;
    }

    async Task OnToggleClick() => await Toggle();

    async Task Toggle(bool? value = null)
    {
        var newValue = value ?? !ToggleOn;
        if (ToggleOn != newValue)
        {
            ToggleOn = newValue;
            await ToggleOnChanged.InvokeAsync(ToggleOn);
        }
    }
    
    void OnItemClick(MenuItemClickEventArgs e)
    {
        string test = HeaderName;
        SessionValues.PageName = "- "+e.ItemInfo.Name+"\\"+e.ItemInfo.Text;
    }
}